name: Backend CI

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ecar_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -r requirements.txt
        
    - name: Run migrations
      run: |
        cd backend
        python manage.py migrate --settings=ecar_backend.settings.test
        
    - name: Run Django tests
      run: |
        cd backend
        python manage.py test --settings=ecar_backend.settings.test
        
    - name: Check code quality with flake8
      run: |
        pip install flake8
        cd backend
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  build-docker:
    needs: test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: phara0n/ecar-backend:latest
  
  # Deploy job would be added here for production environment
  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #   - uses: actions/checkout@v3
  #   
  #   - name: Deploy to production server
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.HOST }}
  #       username: ${{ secrets.USERNAME }}
  #       key: ${{ secrets.SSH_KEY }}
  #       script: |
  #         cd /path/to/deployment
  #         git pull
  #         docker-compose up -d --build 